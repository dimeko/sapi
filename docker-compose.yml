version: "3"
services:
  app:
    build: .
    image: sapi
    container_name: sapi_app
    environment:
      PORT: "${APP_PORT}"
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_DB: "${POSTGRES_DB}"
      POSTGRES_PORT: "${POSTGRES_PORT}"
      POSTGRES_HOST: "${POSTGRES_HOST}"
    depends_on:
      - postgres
      - migrate
    ports:
      - "${APP_PORT}:${APP_PORT}"
    volumes:
      - ./:/app
  apptest:
    build:
      context: .
      dockerfile: Dockerfile.test
    image: sapi_test
    container_name: sapi_app_test
    depends_on:
      - postgres_test
      - migrate_test
    environment:
      PORT: "${TEST_APP_PORT}"
      POSTGRES_USER: "${TEST_POSTGRES_USER}"
      POSTGRES_PASSWORD: "${TEST_POSTGRES_PASSWORD}"
      POSTGRES_DB: "${TEST_POSTGRES_DB}"
      POSTGRES_PORT: "${TEST_POSTGRES_PORT}"
      POSTGRES_HOST: "${TEST_POSTGRES_HOST}"
    ports:
      - "${TEST_APP_PORT}:${TEST_APP_PORT}"
    volumes:
      - ./:/testdir
  postgres:
    image: postgres:latest
    container_name: sapi_db
    restart: always
    environment:
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_DB: "${POSTGRES_DB}"
      POSTGRES_PORT: "${POSTGRES_PORT}"
    ports:
     - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    command: -p ${POSTGRES_PORT}
  postgres_test:
    image: postgres:latest
    container_name: sapi_db_test
    environment:
      POSTGRES_USER: "${TEST_POSTGRES_USER}"
      POSTGRES_PASSWORD: "${TEST_POSTGRES_PASSWORD}"
      POSTGRES_DB: "${TEST_POSTGRES_DB}"
      POSTGRES_PORT: "${TEST_POSTGRES_PORT}"
    ports:
      - "${TEST_POSTGRES_PORT}:${TEST_POSTGRES_PORT}"
    command: -p ${TEST_POSTGRES_PORT}
  migrate_test:
    image: migrate/migrate
    container_name: app_migrate_test
    depends_on:
      - postgres_test
    volumes:
        - ./db/migrations:/migrations
    command: [
      "-path", 
      "/migrations", 
      "-database", 
      "postgres://${TEST_POSTGRES_USER}:${TEST_POSTGRES_PASSWORD}@${TEST_POSTGRES_HOST}:${TEST_POSTGRES_PORT}/${TEST_POSTGRES_DB}?sslmode=disable", 
      "up"]
  migrate:
    image: migrate/migrate
    container_name: app_migrate
    depends_on:
      - postgres
    volumes:
        - ./db/migrations:/migrations
    command: [
      "-path", 
      "/migrations", 
      "-database", 
      "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}?sslmode=disable", 
      "up"]
  memcached:
    container_name: memcached
    image: memcached:latest
    ports:
        - "11211:11211"
